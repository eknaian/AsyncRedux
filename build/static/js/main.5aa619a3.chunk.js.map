{"version":3,"sources":["components/Cart/CartItem.module.css","components/Shop/ProductItem.module.css","components/UI/Notification.module.css","components/Cart/CartButton.module.css","components/UI/Card.module.css","components/Cart/Cart.module.css","components/Layout/MainHeader.module.css","components/Shop/Products.module.css","store/ui-slice.js","store/cart-slice.js","components/UI/Card.js","components/Cart/CartItem.js","components/Cart/Cart.js","components/Cart/CartButton.js","components/Layout/MainHeader.js","components/Layout/Layout.js","components/Shop/ProductItem.js","components/Shop/Products.js","components/UI/Notification.js","App.js","store/cart-actions.js","store/index.js","index.js"],"names":["module","exports","uiSlice","createSlice","name","initialState","cartIsVisible","notification","reducers","toggle","state","showNotification","action","status","payload","title","message","uiActions","actions","cartSlice","items","totalQuantity","changed","replaceCart","addItemToCart","newItem","existingItem","find","item","id","quantity","totalPrice","price","push","removeItemFromCart","filter","cartActions","Card","props","className","classes","card","children","CartItem","dispatch","useDispatch","total","toFixed","itemprice","details","onClick","Cart","cartItems","useSelector","cart","map","CartButton","cartQuantity","button","badge","MainHeader","header","Layout","ProductItem","description","DUMMY_PRODUCTS","Products","products","product","Notification","specialClasses","error","success","cssClasses","isInitial","App","showCart","ui","useEffect","fetchData","fetch","response","ok","Error","json","data","cartData","sendRequest","method","body","JSON","stringify","sendCartData","store","configureStore","reducer","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.5aa619a3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CartItem_item__1zMOi\",\"details\":\"CartItem_details__2_Z3n\",\"quantity\":\"CartItem_quantity__DfEXm\",\"price\":\"CartItem_price__2Nl0j\",\"itemprice\":\"CartItem_itemprice__j9ZSt\",\"actions\":\"CartItem_actions__UwVPJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ProductItem_item__WYS0J\",\"price\":\"ProductItem_price__1GiPR\",\"actions\":\"ProductItem_actions__14Yr-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__3D5S5\",\"error\":\"Notification_error__2ILHS\",\"success\":\"Notification_success__3Ww1I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"CartButton_button__3nU_b\",\"badge\":\"CartButton_badge__3njqM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1m44e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart\":\"Cart_cart__3GqLz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainHeader_header__k5Wsz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"products\":\"Products_products__1PCvW\"};","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst uiSlice = createSlice({\n  name: \"ui\",\n  initialState: { cartIsVisible: false, notification: null },\n  reducers: {\n    toggle(state) {\n      state.cartIsVisible = !state.cartIsVisible;\n    },\n    showNotification(state, action) {\n      state.notification = {\n        status: action.payload.status,\n        title: action.payload.title,\n        message: action.payload.message,\n      };\n    },\n  },\n});\n\nexport const uiActions = uiSlice.actions;\n\nexport default uiSlice;\n","import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    items: [],\n    totalQuantity: 0,\n    changed: false,\n  },\n  reducers: {\n    replaceCart(state, action) {\n      state.totalQuantity = action.payload.totalQuantity;\n      state.items = action.payload.items;\n    },\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find((item) => item.id === newItem.id);\n      state.totalQuantity++;\n      state.changed = true;\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title,\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find((item) => item.id === id);\n      state.totalQuantity--;\n      state.changed = true;\n\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter((item) => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    },\n  },\n});\n\nexport const cartActions = cartSlice.actions;\n\nexport default cartSlice;\n","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return (\n    <section\n      className={`${classes.card} ${props.className ? props.className : ''}`}\n    >\n      {props.children}\n    </section>\n  );\n};\n\nexport default Card;\n","import { useDispatch } from \"react-redux\";\nimport { cartActions } from \"../../store/cart-slice\";\nimport classes from \"./CartItem.module.css\";\n\nconst CartItem = (props) => {\n  const dispatch = useDispatch();\n\n  const { title, quantity, total, price, id } = props.item;\n\n  const addItemHandler = () => {\n    dispatch(\n      cartActions.addItemToCart({\n        id,\n        total,\n        price,\n      })\n    );\n  };\n\n  const removeItemHandler = () => {\n    dispatch(cartActions.removeItemFromCart(id));\n  };\n\n  return (\n    <li className={classes.item}>\n      <header>\n        <h3>{title}</h3>\n        <div className={classes.price}>\n          ${total.toFixed(2)}{\" \"}\n          <span className={classes.itemprice}>(${price.toFixed(2)}/item)</span>\n        </div>\n      </header>\n      <div className={classes.details}>\n        <div className={classes.quantity}>\n          x <span>{quantity}</span>\n        </div>\n        <div className={classes.actions}>\n          <button onClick={removeItemHandler}>-</button>\n          <button onClick={addItemHandler}>+</button>\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport default CartItem;\n","import { useSelector } from \"react-redux\";\nimport Card from \"../UI/Card\";\nimport classes from \"./Cart.module.css\";\nimport CartItem from \"./CartItem\";\n\nconst Cart = (props) => {\n  const cartItems = useSelector((state) => state.cart.items);\n\n  return (\n    <Card className={classes.cart}>\n      <h2>Your Shopping Cart</h2>\n      <ul>\n        {cartItems.map((item) => (\n          <CartItem\n            key={item.id}\n            item={{\n              id: item.id,\n              title: item.name,\n              quantity: item.quantity,\n              total: item.totalPrice,\n              price: item.price,\n            }}\n          />\n        ))}\n      </ul>\n    </Card>\n  );\n};\n\nexport default Cart;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { uiActions } from \"../../store/ui-slice\";\n\nimport classes from \"./CartButton.module.css\";\n\nconst CartButton = (props) => {\n  const dispatch = useDispatch();\n\n  const cartQuantity = useSelector((state) => state.cart.totalQuantity);\n\n  const toggleCartHandler = () => {\n    dispatch(uiActions.toggle());\n  };\n\n  return (\n    <button className={classes.button} onClick={toggleCartHandler}>\n      <span>My Cart</span>\n      <span className={classes.badge}>{cartQuantity}</span>\n    </button>\n  );\n};\n\nexport default CartButton;\n","import CartButton from '../Cart/CartButton';\nimport classes from './MainHeader.module.css';\n\nconst MainHeader = (props) => {\n  return (\n    <header className={classes.header}>\n      <h1>ReduxCart</h1>\n      <nav>\n        <ul>\n          <li>\n            <CartButton />\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainHeader;\n","import { Fragment } from 'react';\nimport MainHeader from './MainHeader';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainHeader />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import { useDispatch } from \"react-redux\";\nimport { cartActions } from \"../../store/cart-slice\";\n\nimport Card from \"../UI/Card\";\nimport classes from \"./ProductItem.module.css\";\n\nconst ProductItem = (props) => {\n  const dispatch = useDispatch();\n\n  const { title, price, description, id } = props;\n\n  const addToCartHandler = () => {\n    dispatch(\n      cartActions.addItemToCart({\n        id,\n        title,\n        price,\n      })\n    );\n  };\n\n  return (\n    <li className={classes.item}>\n      <Card>\n        <header>\n          <h3>{title}</h3>\n          <div className={classes.price}>${price.toFixed(2)}</div>\n        </header>\n        <p>{description}</p>\n        <div className={classes.actions}>\n          <button onClick={addToCartHandler}>Add to Cart</button>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ProductItem;\n","import ProductItem from \"./ProductItem\";\nimport classes from \"./Products.module.css\";\n\nconst DUMMY_PRODUCTS = [\n  {\n    id: \"p1\",\n    price: 6,\n    title: \"My First Book\",\n    description: \"The first book I ever wrote\",\n  },\n  {\n    id: \"p2\",\n    price: 5,\n    title: \"My Second Book\",\n    description: \"The second book I ever wrote\",\n  },\n];\n\nconst Products = (props) => {\n  return (\n    <section className={classes.products}>\n      <h2>Buy your favorite products</h2>\n      <ul>\n        {DUMMY_PRODUCTS.map((product) => (\n          <ProductItem\n            id={product.id}\n            key={product.id}\n            title={product.title}\n            price={product.price}\n            description={product.description}\n          />\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nexport default Products;\n","import classes from \"./Notification.module.css\";\n\nconst Notification = (props) => {\n  let specialClasses = \"\";\n\n  if (props.status === \"error\") {\n    specialClasses = classes.error;\n  }\n  if (props.status === \"success\") {\n    specialClasses = classes.success;\n  }\n\n  const cssClasses = `${classes.notification} ${specialClasses}`;\n\n  return (\n    <section className={cssClasses}>\n      <h2>{props.title}</h2>\n      <p>{props.message}</p>\n    </section>\n  );\n};\n\nexport default Notification;\n","import { Fragment, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { sendCartData, fetchCartData } from \"./store/cart-actions\";\nimport Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Products from \"./components/Shop/Products\";\nimport Notification from \"./components/UI/Notification\";\n\nlet isInitial = true;\n\nfunction App() {\n  const dispatch = useDispatch();\n  const showCart = useSelector((state) => state.ui.cartIsVisible);\n  const cart = useSelector((state) => state.cart);\n  const notification = useSelector((state) => state.ui.notification);\n\n  useEffect(() => {\n    dispatch(fetchCartData());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (isInitial) {\n      isInitial = false;\n      return;\n    }\n\n    if (cart.changed) {\n      dispatch(sendCartData(cart));\n    }\n  }, [cart, dispatch]);\n\n  return (\n    <Fragment>\n      {notification && (\n        <Notification\n          status={notification.status}\n          title={notification.title}\n          message={notification.message}\n        />\n      )}\n      <Layout>\n        {showCart && <Cart />}\n        <Products />\n      </Layout>\n    </Fragment>\n  );\n}\n\nexport default App;\n","import { uiActions } from \"./ui-slice\";\nimport { cartActions } from \"./cart-slice\";\n\nexport const fetchCartData = () => {\n  return async (dispatch) => {\n    const fetchData = async () => {\n      const response = await fetch(\n        \"https://redux-1959f-default-rtdb.firebaseio.com/cart.json\"\n      );\n      if (!response.ok) {\n        throw new Error(\"Could not fetch cart data!\");\n      }\n\n      const data = await response.json();\n\n      return data;\n    };\n    try {\n      const cartData = await fetchData();\n      dispatch(\n        cartActions.replaceCart({\n          items: cartData.items || [],\n          totalQuantity: cartData.totalQuantity,\n        })\n      );\n    } catch (error) {\n      dispatch(\n        uiActions.showNotification({\n          status: \"error\",\n          title: \"Error!\",\n          message: \"Fetching cart data failed!\",\n        })\n      );\n    }\n  };\n};\n\nexport const sendCartData = (cart) => {\n  return async (dispatch) => {\n    dispatch(\n      uiActions.showNotification({\n        status: \"pending\",\n        title: \"Sending...\",\n        message: \"Sending cart data!\",\n      })\n    );\n\n    const sendRequest = async () => {\n      const response = await fetch(\n        \"https://redux-1959f-default-rtdb.firebaseio.com/cart.json\",\n        {\n          method: \"PUT\",\n          body: JSON.stringify({\n            items: cart.items,\n            totalQuantity: cart.totalQuantity,\n          }),\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Sending cart data failed.\");\n      }\n    };\n\n    try {\n      await sendRequest();\n      dispatch(\n        uiActions.showNotification({\n          status: \"success\",\n          title: \"Success!\",\n          message: \"Sent cart data successfully!\",\n        })\n      );\n    } catch (error) {\n      dispatch(\n        uiActions.showNotification({\n          status: \"error\",\n          title: \"Error!\",\n          message: \"Sending cart data failed!\",\n        })\n      );\n    }\n  };\n};\n","import { configureStore } from \"@reduxjs/toolkit\";\n\nimport uiSlice from \"./ui-slice\";\nimport cartSlice from \"./cart-slice\";\n\nconst store = configureStore({\n  reducer: { ui: uiSlice.reducer, cart: cartSlice.reducer },\n});\n\nexport default store;\n","import ReactDOM from \"react-dom/client\";\nimport { Provider } from \"react-redux\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./store/index\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n"],"sourceRoot":""}